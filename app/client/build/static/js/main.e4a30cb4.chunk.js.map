{"version":3,"sources":["store/session.js","components/auth/LoginForm.js","components/auth/SignUpForm.js","components/auth/LogoutButton.js","components/NavBar.js","components/auth/ProtectedRoute.js","components/UsersList.js","components/User.js","App.js","store/index.js","index.js"],"names":["SET_USER","REMOVE_USER","setUser","user","type","payload","initialState","login","email","password","dispatch","a","fetch","method","headers","body","JSON","stringify","response","ok","json","data","status","errors","signUp","username","LoginForm","useState","setErrors","setEmail","setPassword","useSelector","state","session","useDispatch","onLogin","e","preventDefault","to","onSubmit","map","error","ind","htmlFor","name","placeholder","value","onChange","target","SignUpForm","setUsername","repeatPassword","setRepeatPassword","onSignUp","required","LogoutButton","onLogout","onClick","NavBar","exact","activeClassName","ProtectedRoute","props","children","UsersList","users","setUsers","useEffect","responseData","fetchData","userComponents","id","User","userId","useParams","App","enhancer","loaded","setLoaded","path","rootReducer","combineReducers","action","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e4a30cb4.chunk.js","sourcesContent":["// constants\nconst SET_USER = 'session/SET_USER';\nconst REMOVE_USER = 'session/REMOVE_USER';\n\nconst setUser = (user) => ({\n  type: SET_USER,\n  payload: user\n});\n\nconst removeUser = () => ({\n  type: REMOVE_USER,\n})\n\nconst initialState = { user: null };\n\nexport const authenticate = () => async (dispatch) => {\n  const response = await fetch('/api/auth/', {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  });\n  if (response.ok) {\n    const data = await response.json();\n    if (data.errors) {\n      return;\n    }\n  \n    dispatch(setUser(data));\n  }\n}\n\nexport const login = (email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      email,\n      password\n    })\n  });\n  \n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n\n}\n\nexport const logout = () => async (dispatch) => {\n  const response = await fetch('/api/auth/logout', {\n    headers: {\n      'Content-Type': 'application/json',\n    }\n  });\n\n  if (response.ok) {\n    dispatch(removeUser());\n  }\n};\n\n\nexport const signUp = (username, email, password) => async (dispatch) => {\n  const response = await fetch('/api/auth/signup', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify({\n      username,\n      email,\n      password,\n    }),\n  });\n  \n  if (response.ok) {\n    const data = await response.json();\n    dispatch(setUser(data))\n    return null;\n  } else if (response.status < 500) {\n    const data = await response.json();\n    if (data.errors) {\n      return data.errors;\n    }\n  } else {\n    return ['An error occurred. Please try again.']\n  }\n}\n\nexport default function reducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_USER:\n      return { user: action.payload }\n    case REMOVE_USER:\n      return { user: null }\n    default:\n      return state;\n  }\n}\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { login } from '../../store/session';\n\nconst LoginForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onLogin = async (e) => {\n    e.preventDefault();\n    const data = await dispatch(login(email, password));\n    if (data) {\n      setErrors(data);\n    }\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <form onSubmit={onLogin}>\n      <div>\n        {errors.map((error, ind) => (\n          <div key={ind}>{error}</div>\n        ))}\n      </div>\n      <div>\n        <label htmlFor='email'>Email</label>\n        <input\n          name='email'\n          type='text'\n          placeholder='Email'\n          value={email}\n          onChange={updateEmail}\n        />\n      </div>\n      <div>\n        <label htmlFor='password'>Password</label>\n        <input\n          name='password'\n          type='password'\n          placeholder='Password'\n          value={password}\n          onChange={updatePassword}\n        />\n        <button type='submit'>Login</button>\n      </div>\n    </form>\n  );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'\nimport { Redirect } from 'react-router-dom';\nimport { signUp } from '../../store/session';\n\nconst SignUpForm = () => {\n  const [errors, setErrors] = useState([]);\n  const [username, setUsername] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [repeatPassword, setRepeatPassword] = useState('');\n  const user = useSelector(state => state.session.user);\n  const dispatch = useDispatch();\n\n  const onSignUp = async (e) => {\n    e.preventDefault();\n    if (password === repeatPassword) {\n      const data = await dispatch(signUp(username, email, password));\n      if (data) {\n        setErrors(data)\n      }\n    }\n  };\n\n  const updateUsername = (e) => {\n    setUsername(e.target.value);\n  };\n\n  const updateEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const updatePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const updateRepeatPassword = (e) => {\n    setRepeatPassword(e.target.value);\n  };\n\n  if (user) {\n    return <Redirect to='/' />;\n  }\n\n  return (\n    <form onSubmit={onSignUp}>\n      <div>\n        {errors.map((error, ind) => (\n          <div key={ind}>{error}</div>\n        ))}\n      </div>\n      <div>\n        <label>User Name</label>\n        <input\n          type='text'\n          name='username'\n          onChange={updateUsername}\n          value={username}\n        ></input>\n      </div>\n      <div>\n        <label>Email</label>\n        <input\n          type='text'\n          name='email'\n          onChange={updateEmail}\n          value={email}\n        ></input>\n      </div>\n      <div>\n        <label>Password</label>\n        <input\n          type='password'\n          name='password'\n          onChange={updatePassword}\n          value={password}\n        ></input>\n      </div>\n      <div>\n        <label>Repeat Password</label>\n        <input\n          type='password'\n          name='repeat_password'\n          onChange={updateRepeatPassword}\n          value={repeatPassword}\n          required={true}\n        ></input>\n      </div>\n      <button type='submit'>Sign Up</button>\n    </form>\n  );\n};\n\nexport default SignUpForm;\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { logout } from '../../store/session';\n\nconst LogoutButton = () => {\n  const dispatch = useDispatch()\n  const onLogout = async (e) => {\n    await dispatch(logout());\n  };\n\n  return <button onClick={onLogout}>Logout</button>;\n};\n\nexport default LogoutButton;\n","\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport LogoutButton from './auth/LogoutButton';\n\nconst NavBar = () => {\n  return (\n    <nav>\n      <ul>\n        <li>\n          <NavLink to='/' exact={true} activeClassName='active'>\n            Home\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/login' exact={true} activeClassName='active'>\n            Login\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/sign-up' exact={true} activeClassName='active'>\n            Sign Up\n          </NavLink>\n        </li>\n        <li>\n          <NavLink to='/users' exact={true} activeClassName='active'>\n            Users\n          </NavLink>\n        </li>\n        <li>\n          <LogoutButton />\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { Route, Redirect } from 'react-router-dom';\n\nconst ProtectedRoute = props => {\n  const user = useSelector(state => state.session.user)\n  return (\n    <Route {...props}>\n      {(user)? props.children  : <Redirect to='/login' />}\n    </Route>\n  )\n};\n\n\nexport default ProtectedRoute;\n","import React, { useEffect, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n\nfunction UsersList() {\n  const [users, setUsers] = useState([]);\n\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch('/api/users/');\n      const responseData = await response.json();\n      setUsers(responseData.users);\n    }\n    fetchData();\n  }, []);\n\n  const userComponents = users.map((user) => {\n    return (\n      <li key={user.id}>\n        <NavLink to={`/users/${user.id}`}>{user.username}</NavLink>\n      </li>\n    );\n  });\n\n  return (\n    <>\n      <h1>User List: </h1>\n      <ul>{userComponents}</ul>\n    </>\n  );\n}\n\nexport default UsersList;\n","import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nfunction User() {\n  const [user, setUser] = useState({});\n  const { userId }  = useParams();\n\n  useEffect(() => {\n    if (!userId) {\n      return;\n    }\n    (async () => {\n      const response = await fetch(`/api/users/${userId}`);\n      const user = await response.json();\n      setUser(user);\n    })();\n  }, [userId]);\n\n  if (!user) {\n    return null;\n  }\n\n  return (\n    <ul>\n      <li>\n        <strong>User Id</strong> {userId}\n      </li>\n      <li>\n        <strong>Username</strong> {user.username}\n      </li>\n      <li>\n        <strong>Email</strong> {user.email}\n      </li>\n    </ul>\n  );\n}\nexport default User;\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport LoginForm from './components/auth/LoginForm';\nimport SignUpForm from './components/auth/SignUpForm';\nimport NavBar from './components/NavBar';\nimport ProtectedRoute from './components/auth/ProtectedRoute';\nimport UsersList from './components/UsersList';\nimport User from './components/User';\nimport { authenticate } from './store/session';\n\nfunction App() {\n  const [loaded, setLoaded] = useState(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    (async() => {\n      await dispatch(authenticate());\n      setLoaded(true);\n    })();\n  }, [dispatch]);\n\n  if (!loaded) {\n    return null;\n  }\n\n  return (\n    <BrowserRouter>\n      <NavBar />\n      <Switch>\n        <Route path='/login' exact={true}>\n          <LoginForm />\n        </Route>\n        <Route path='/sign-up' exact={true}>\n          <SignUpForm />\n        </Route>\n        <ProtectedRoute path='/users' exact={true} >\n          <UsersList/>\n        </ProtectedRoute>\n        <ProtectedRoute path='/users/:userId' exact={true} >\n          <User />\n        </ProtectedRoute>\n        <ProtectedRoute path='/' exact={true} >\n          <h1>My Home Page</h1>\n        </ProtectedRoute>\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport session from './session'\n\nconst rootReducer = combineReducers({\n  session,\n});\n\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n  enhancer = applyMiddleware(thunk);\n} else {\n  const logger = require('redux-logger').default;\n  const composeEnhancers =\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n  return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport configureStore from './store';\n\nconst store = configureStore();\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n        <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}